(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{226:function(e,v,_){"use strict";_.r(v);var t=_(0),a=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("div",{staticClass:"content"},[_("h1",{attrs:{id:"创建首个表单"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#创建首个表单","aria-hidden":"true"}},[e._v("#")]),e._v(" 创建首个表单")]),e._v(" "),_("h2",{attrs:{id:"html表单是什么？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#html表单是什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" HTML表单是什么？")]),e._v(" "),_("p",[e._v("HTML表单是用户和web站点或应用程序之间交互的主要内容之一。它们允许用户将数据发送到web站点。大多数情况下，数据被发送到web服务器，但是web页面也可以自己拦截它并使用它。")]),e._v(" "),_("p",[e._v("HTML表单是由一个或多个小部件组成的。这些小部件可以是文本字段(单行或多行)、选择框、按钮、复选框或单选按钮。大多数情况下，这些小部件与描述其目的的标签配对——正确实现的标签能够清楚地指示视力正常的用户和盲人用户输入表单所需的内容。")]),e._v(" "),_("p",[e._v("HTML表单和常规HTML文档的主要区别在于，大多数情况下，表单收集的数据被发送到web服务器。在这种情况下，您需要设置一个web服务器来接收和处理数据。")]),e._v(" "),_("h2",{attrs:{id:""}},[_("a",{staticClass:"header-anchor",attrs:{href:"#","aria-hidden":"true"}},[e._v("#")])]),e._v(" "),_("p",[e._v("设计表单")]),e._v(" "),_("p",[e._v("在开始编写代码之前，最好先退一步，花点时间考虑一下您的表单。设计一个快速的模型将帮助您定义您想要询问用户的正确的数据集。从用户体验(UX)的角度来看，要记住：表单越大，失去用户的风险就越大。保持简单，保持专注:只要求必要的数据。在构建站点或应用程序时，设计表单是非常重要的一步。")]),e._v(" "),_("h3",{attrs:{id:"-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#-2","aria-hidden":"true"}},[e._v("#")])]),e._v(" "),_("p",[e._v("<form> 元素")]),e._v(" "),_("p",[e._v("所有HTML表单都以一个<form>元素开始")]),e._v(" "),_("p",[_("code",[e._v('<form action="/my-handling-form-page" method="post">')])]),e._v(" "),_("p",[_("code",[e._v("</form>")])]),e._v(" "),_("p",[e._v("这个元素正式定义了一个表单。就像<div>元素或<p>元素，它是一个**容器元素**，但它也支持一些特定的属性来配置表单的行为方式。它的所有属性都是可选的，但至少要设置action属性和method属性，这被认为是最佳实践。")]),e._v(" "),_("ul",[_("li",[e._v("action 属性定义了在提交表单时,应该把所收集的数据送给谁(/那个模块)(URL)去处理。.")]),e._v(" "),_("li",[e._v("method 属性定义了发送数据的HTTP方法(它可以是“get”或“post”).")])]),e._v(" "),_("h3",{attrs:{id:"-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#-3","aria-hidden":"true"}},[e._v("#")])]),e._v(" "),_("p",[e._v("<label>, <input> 和<textarea>元素")]),e._v(" "),_("p",[e._v("联系人表单非常简单，包含三个文本字段，每个字段都有一个标签。该名称的输入字段将是一个基本的单行文本字段，电子邮件的输入字段将是一个只接受电子邮件地址的单行文本字段，而消息的输入字段将是一个基本的多行文本字段。")]),e._v(" "),_("p",[_("code",[e._v('<form action="/my-handling-form-page" method="post">')])]),e._v(" "),_("p",[_("code",[e._v("<div>")])]),e._v(" "),_("p",[_("code",[e._v('<label for="name">Name:</label>')])]),e._v(" "),_("p",[_("code",[e._v('<input type="text" id="name" />')])]),e._v(" "),_("p",[_("code",[e._v("</div>")])]),e._v(" "),_("p",[_("code",[e._v("<div>")])]),e._v(" "),_("p",[_("code",[e._v('<label for="mail">E-mail:</label>')])]),e._v(" "),_("p",[_("code",[e._v('<input type="email" id="mail" />')])]),e._v(" "),_("p",[_("code",[e._v("</div>")])]),e._v(" "),_("p",[_("code",[e._v("<div>")])]),e._v(" "),_("p",[_("code",[e._v('<label for="msg">Message:</label>')])]),e._v(" "),_("p",[_("code",[e._v('<textarea id="msg"></textarea>')])]),e._v(" "),_("p",[_("code",[e._v("</div>")])]),e._v(" "),_("p",[_("code",[e._v("</form>")])]),e._v(" "),_("p",[e._v("使用<div> 元素可以使我们更加方便地构造我们自己的代码，并且更容易样式化。")]),e._v(" "),_("p",[e._v("注意在所有<label>元素上使用for属性；它是将标签链接到表单小部件的一种正式方式。这个属性引用相应的小部件的id。这样做有一些好处。最明显的一个好处是允许用户单击标签以激活相应的小部件。")]),e._v(" "),_("p",[e._v("在 <input>元素中，最重要的属性是type 属性。这个属性非常重要，因为它定义了<input>属性的行为方式。它可以从根本上改变元素，所以要注意它。")]),e._v(" "),_("ul",[_("li",[e._v("使用值 text 作为第一个输入——这个属性的默认值。它表示一个基本的单行文本字段，接受任何类型的文本输入。")]),e._v(" "),_("li",[e._v("对于第二个输入，我们使用值email，它定义了一个只接受格式良好的电子邮件地址的单行文本字段。")]),e._v(" "),_("li",[e._v("最后一个值将一个基本的文本字段转换为一种“智能”字段，该字段将对用户输入的数据进行一些检查。")])]),e._v(" "),_("p",[e._v("最后但同样重要的是，要注意<input /> 和 <textarea></textarea>的语法。这是HTML的一个奇怪之处。 <input> 标签是一个空元素，这意味着它不需要关闭标签。相反， <textarea>不是一个空元素，因此必须使用适当的结束标记来关闭它。这对HTML表单的特定特性有影响:定义默认值的方式。要定义<input>的默认值，你必须使用value 属性")]),e._v(" "),_("p",[_("code",[e._v('<input type="text" value="by default this element is filled with this text" />')])]),e._v(" "),_("p",[e._v("相反，如果您想定义<textarea>的默认值，您只需在<textarea>元素的开始和结束标记之间放置默认值")]),e._v(" "),_("p",[_("code",[e._v("<textarea>by default this element is filled with this text</textarea>")])]),e._v(" "),_("h3",{attrs:{id:"button-元素"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#button-元素","aria-hidden":"true"}},[e._v("#")]),e._v(" <button> 元素")]),e._v(" "),_("p",[e._v("只需要再添加一个按钮，让用户在填写完表单后发送他们的数据。这是通过使用 <button> 元素完成的。在 </form>标签上添加以下内容：")]),e._v(" "),_("p",[_("code",[e._v('<div class="button">')])]),e._v(" "),_("p",[_("code",[e._v('<button type="submit">Send your message</button>')])]),e._v(" "),_("p",[_("code",[e._v("</div>")])]),e._v(" "),_("ul",[_("li",[e._v("单击 submit 按钮 发送表单的数据到<form>元素的action 属性所定义的网页。")]),e._v(" "),_("li",[e._v("单击 reset 按钮 将所有表单小部件重新设置为它们的默认值。从用户体验的角度来看，这被认为是一种糟糕的做法。")]),e._v(" "),_("li",[e._v("单击button 按钮……不会发生任何事！这听起来很傻，但是用JavaScript构建定制按钮非常有用。")])]),e._v(" "),_("p",[e._v('注意：您还可以使用相应类型的 <input>元素来生成一个按钮，如 <input type="submit">。<button>元素的主要优点是， <input>元素只允许纯文本作为其标签，而<button>元素允许完整的HTML内容，允许更复杂、更有创意的按钮文本。')]),e._v(" "),_("h2",{attrs:{id:"基本表单样式-基本表单样式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基本表单样式-基本表单样式","aria-hidden":"true"}},[e._v("#")]),e._v(" 基本表单样式 {#基本表单样式}")]),e._v(" "),_("p",[e._v("现在您已经完成了表单的HTML代码，尝试保存它并在浏览器中查看它。\n现在，你会看到它看起来很丑。所以现在我们只需要让您添加一些CSS来让它看起来很好。")]),e._v(" "),_("p",[e._v("首先，在您的HTML头部中添加一个 <style>元素。应该是这样的：")]),e._v(" "),_("p",[_("code",[e._v("<style>")])]),e._v(" "),_("p",[_("code",[e._v("</style>")])]),e._v(" "),_("p",[e._v("在样式标签中，添加如下的CSS")]),e._v(" "),_("p",[_("code",[e._v("form {")])]),e._v(" "),_("p",[_("code",[e._v("/* 居中表单 */")])]),e._v(" "),_("p",[_("code",[e._v("margin: 0 auto;")])]),e._v(" "),_("p",[_("code",[e._v("width: 400px;")])]),e._v(" "),_("p",[_("code",[e._v("/* 显示表单的轮廓 */")])]),e._v(" "),_("p",[_("code",[e._v("padding: 1em;")])]),e._v(" "),_("p",[_("code",[e._v("border: 1px solid #CCC;")])]),e._v(" "),_("p",[_("code",[e._v("border-radius: 1em;")])]),e._v(" "),_("p",[_("code",[e._v("}")])]),e._v(" "),_("p",[_("code")]),e._v(" "),_("p",[_("code",[e._v("form div + div {")])]),e._v(" "),_("p",[_("code",[e._v("margin-top: 1em;")])]),e._v(" "),_("p",[_("code",[e._v("}")])]),e._v(" "),_("p",[_("code")]),e._v(" "),_("p",[_("code",[e._v("label {")])]),e._v(" "),_("p",[_("code",[e._v("/* 确保所有label大小相同并正确对齐 */")])]),e._v(" "),_("p",[_("code",[e._v("display: inline-block;")])]),e._v(" "),_("p",[_("code",[e._v("width: 90px;")])]),e._v(" "),_("p",[_("code",[e._v("text-align: right;")])]),e._v(" "),_("p",[_("code",[e._v("}")])]),e._v(" "),_("p",[_("code")]),e._v(" "),_("p",[_("code",[e._v("input, textarea {")])]),e._v(" "),_("p",[_("code",[e._v("/* 确保所有文本输入框字体相同")])]),e._v(" "),_("p",[_("code",[e._v("textarea默认是等宽字体 */")])]),e._v(" "),_("p",[_("code",[e._v("font: 1em sans-serif;")])]),e._v(" "),_("p",[_("code")]),e._v(" "),_("p",[_("code",[e._v("/* 使所有文本输入框大小相同 */")])]),e._v(" "),_("p",[_("code",[e._v("width: 300px;")])]),e._v(" "),_("p",[_("code",[e._v("box-sizing: border-box;")])]),e._v(" "),_("p",[_("code")]),e._v(" "),_("p",[_("code",[e._v("/* 调整文本输入框的边框样式 */")])]),e._v(" "),_("p",[_("code",[e._v("border: 1px solid #999;")])]),e._v(" "),_("p",[_("code",[e._v("}")])]),e._v(" "),_("p",[_("code")]),e._v(" "),_("p",[_("code",[e._v("input:focus, textarea:focus {")])]),e._v(" "),_("p",[_("code",[e._v("/* 给激活的元素一点高亮效果 */")])]),e._v(" "),_("p",[_("code",[e._v("border-color: #000;")])]),e._v(" "),_("p",[_("code",[e._v("}")])]),e._v(" "),_("p",[_("code")]),e._v(" "),_("p",[_("code",[e._v("textarea {")])]),e._v(" "),_("p",[_("code",[e._v("/* 使多行文本输入框和它们的label正确对齐 */")])]),e._v(" "),_("p",[_("code",[e._v("vertical-align: top;")])]),e._v(" "),_("p",[_("code")]),e._v(" "),_("p",[_("code",[e._v("/* 给文本留下足够的空间 */")])]),e._v(" "),_("p",[_("code",[e._v("height: 5em;")])]),e._v(" "),_("p",[_("code",[e._v("}")])]),e._v(" "),_("p",[_("code")]),e._v(" "),_("p",[_("code",[e._v(".button {")])]),e._v(" "),_("p",[_("code",[e._v("/* 把按钮放到和文本输入框一样的位置 */")])]),e._v(" "),_("p",[_("code",[e._v("padding-left: 90px; /* 和label的大小一样 */")])]),e._v(" "),_("p",[_("code",[e._v("}")])]),e._v(" "),_("p",[_("code")]),e._v(" "),_("p",[_("code",[e._v("button {")])]),e._v(" "),_("p",[_("code",[e._v("/* 这个外边距的大小与label和文本输入框之间的间距差不多 */")])]),e._v(" "),_("p",[_("code",[e._v("margin-left: .5em;")])]),e._v(" "),_("p",[_("code",[e._v("}")])]),e._v(" "),_("h2",{attrs:{id:"向您的web服务器发送表单数据-向您的web服务器发送表单数据"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#向您的web服务器发送表单数据-向您的web服务器发送表单数据","aria-hidden":"true"}},[e._v("#")]),e._v(" 向您的web服务器发送表单数据 {#向您的web服务器发送表单数据}")]),e._v(" "),_("p",[e._v("在服务器端处理表单数据。如前所述，大多数时候HTML表单是向用户请求数据并将其发送到web服务器的一种方便的方式。")]),e._v(" "),_("p",[e._v("<form> 元素将定义如何通过action 属性和 method属性来发送数据的位置和方式。")]),e._v(" "),_("p",[e._v("还需要为我们的数据提供一个名称。这些名字对双方都很重要：在浏览器端，它告诉浏览器哪个名称提供每个数据，在服务器端，它允许服务器按名称处理每个数据块。")]),e._v(" "),_("p",[e._v("要将数据命名为表单，您需要在每个表单小部件上使用 name 属性来收集特定的数据块。")]),e._v(" "),_("p",[e._v('表单会发送三个已命名的数据块 "user_name", "user_email", 和 "user_message"。这些数据将用使用HTTP POST 方法,把信息发送到URL为 "/my-handling-form-page"目录下。')]),e._v(" "),_("p",[e._v('在服务器端，位于URL"/my-handling-form-page" 上的脚本将接收的数据作为HTTP请求中包含的3个键/值项的列表。这个脚本处理这些数据的方式取决于您。每个服务器端语言(PHP、Python、Ruby、Java、c等等)都有自己的机制。')])])}],!1,null,null,null);v.default=a.exports}}]);